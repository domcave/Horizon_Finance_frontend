{"ast":null,"code":"var _jsxFileName = \"/Users/dom/Professional-Docs/PersonalProjects/Horizon_Finance_frontend/horizon_finance_frontend/src/services/plaid_service.js\",\n  _s = $RefreshSig$();\nimport { usePlaidLink } from 'react-plaid-link';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.baseURL = \"http://127.0.0.1:5000/plaid\";\nexport default function ConnectBank({\n  user_id\n}) {\n  _s();\n  const [linkToken, setLinkToken] = useState(null);\n  const [publicToken, setPublicToken] = useState(null);\n  useEffect(() => {\n    async function fetch() {\n      console.log(\"Sending user_id:\", user_id);\n      const response = await axios.post(\"/link_token\", {\n        user_id: user_id\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const linkToken = response.data.link_token;\n      setLinkToken(linkToken);\n    }\n    fetch();\n  }, [user_id]);\n  const {\n    open,\n    ready\n  } = usePlaidLink(linkToken ? {\n    token: linkToken,\n    onSuccess: async (public_token, metadata) => {\n      setPublicToken(public_token);\n      try {\n        console.log(publicToken);\n        const response = await axios.post(\"/access_token\", {\n          public_token: public_token\n        }, {\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        console.log(response.data);\n      } catch (error) {\n        console.error(\"Error exchanging public token:\", error);\n      }\n    },\n    onExit: (error, metadata) => {\n      console.log(\"Exited link before establishing connection\");\n    }\n  } : {} // Prevent errors if linkToken is null\n  );\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => open(),\n    disabled: !ready,\n    children: \"Connect a bank account\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(ConnectBank, \"98+NZEF+aId1XMUkGxbNHADPr/Q=\", false, function () {\n  return [usePlaidLink];\n});\n_c = ConnectBank;\nvar _c;\n$RefreshReg$(_c, \"ConnectBank\");","map":{"version":3,"names":["usePlaidLink","axios","useState","useEffect","jsxDEV","_jsxDEV","defaults","baseURL","ConnectBank","user_id","_s","linkToken","setLinkToken","publicToken","setPublicToken","fetch","console","log","response","post","headers","data","link_token","open","ready","token","onSuccess","public_token","metadata","error","onExit","onClick","disabled","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dom/Professional-Docs/PersonalProjects/Horizon_Finance_frontend/horizon_finance_frontend/src/services/plaid_service.js"],"sourcesContent":["import { usePlaidLink } from 'react-plaid-link';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\n\naxios.defaults.baseURL = \"http://127.0.0.1:5000/plaid\";\n\nexport default function ConnectBank({ user_id }) {\n    const [ linkToken, setLinkToken ] = useState(null);\n    const [ publicToken, setPublicToken ] = useState(null);\n\n\n    useEffect(() => {\n        async function fetch() {\n            console.log(\"Sending user_id:\", user_id);\n            const response = await axios.post(\"/link_token\", \n                { user_id: user_id }, \n                {\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    }\n                }\n            );\n            const linkToken = response.data.link_token\n            setLinkToken(linkToken)\n            \n        }\n        fetch();\n    }, [user_id]);\n\n    const { open, ready } = usePlaidLink(\n        linkToken\n            ? {\n                token: linkToken,\n                onSuccess: async (public_token, metadata) => {\n                    setPublicToken(public_token);\n                    try {\n                        console.log(publicToken)\n                        const response = await axios.post(\"/access_token\", \n                            { public_token: public_token }, \n                            {\n                                headers: {\n                                    \"Content-Type\": \"application/json\"\n                                }\n                            }\n                        );\n                        console.log(response.data);\n                    } catch (error) {\n                        console.error(\"Error exchanging public token:\", error);\n                    }\n                },\n                onExit: (error, metadata) => {\n                    console.log(\"Exited link before establishing connection\");\n                }\n            }\n            : {} // Prevent errors if linkToken is null\n    );\n\n\n    return (\n        <button onClick={() => open()} disabled={!ready}>\n            Connect a bank account\n        </button>\n    );\n\n}\n\n\n"],"mappings":";;AAAA,SAASA,YAAY,QAAQ,kBAAkB;AAC/C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5CJ,KAAK,CAACK,QAAQ,CAACC,OAAO,GAAG,6BAA6B;AAEtD,eAAe,SAASC,WAAWA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAC7C,MAAM,CAAEC,SAAS,EAAEC,YAAY,CAAE,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAAEW,WAAW,EAAEC,cAAc,CAAE,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAGtDC,SAAS,CAAC,MAAM;IACZ,eAAeY,KAAKA,CAAA,EAAG;MACnBC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAER,OAAO,CAAC;MACxC,MAAMS,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAAC,aAAa,EAC3C;QAAEV,OAAO,EAAEA;MAAQ,CAAC,EACpB;QACIW,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACJ,CACJ,CAAC;MACD,MAAMT,SAAS,GAAGO,QAAQ,CAACG,IAAI,CAACC,UAAU;MAC1CV,YAAY,CAACD,SAAS,CAAC;IAE3B;IACAI,KAAK,CAAC,CAAC;EACX,CAAC,EAAE,CAACN,OAAO,CAAC,CAAC;EAEb,MAAM;IAAEc,IAAI;IAAEC;EAAM,CAAC,GAAGxB,YAAY,CAChCW,SAAS,GACH;IACEc,KAAK,EAAEd,SAAS;IAChBe,SAAS,EAAE,MAAAA,CAAOC,YAAY,EAAEC,QAAQ,KAAK;MACzCd,cAAc,CAACa,YAAY,CAAC;MAC5B,IAAI;QACAX,OAAO,CAACC,GAAG,CAACJ,WAAW,CAAC;QACxB,MAAMK,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAAC,eAAe,EAC7C;UAAEQ,YAAY,EAAEA;QAAa,CAAC,EAC9B;UACIP,OAAO,EAAE;YACL,cAAc,EAAE;UACpB;QACJ,CACJ,CAAC;QACDJ,OAAO,CAACC,GAAG,CAACC,QAAQ,CAACG,IAAI,CAAC;MAC9B,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACZb,OAAO,CAACa,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MAC1D;IACJ,CAAC;IACDC,MAAM,EAAEA,CAACD,KAAK,EAAED,QAAQ,KAAK;MACzBZ,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC;IAC7D;EACJ,CAAC,GACC,CAAC,CAAC,CAAC;EACb,CAAC;EAGD,oBACIZ,OAAA;IAAQ0B,OAAO,EAAEA,CAAA,KAAMR,IAAI,CAAC,CAAE;IAACS,QAAQ,EAAE,CAACR,KAAM;IAAAS,QAAA,EAAC;EAEjD;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAGjB;AAAC3B,EAAA,CA1DuBF,WAAW;EAAA,QAuBPR,YAAY;AAAA;AAAAsC,EAAA,GAvBhB9B,WAAW;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}